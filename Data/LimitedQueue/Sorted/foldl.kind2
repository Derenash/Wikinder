Data.LimitedQueue.Sorted.foldl <a> <b> (size: Nat) (acc: b) (func: (a -> a -> Bool) -> a -> b -> b) (queue: Data.LimitedQueue.Sorted size a) : b
Data.LimitedQueue.Sorted.foldl a b Nat.zero        acc func queue = acc
Data.LimitedQueue.Sorted.foldl a b (Nat.succ pred) acc func (Data.LimitedQueue.Sorted.new (Nat.succ size0) sort (Data.LimitedQueue.List.new size1 head tail)) =
  Data.LimitedQueue.Sorted.foldl pred ((func sort) head acc) func (Data.LimitedQueue.Sorted.new pred sort tail)

